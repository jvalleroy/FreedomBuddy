# -*- mode: org; mode: org-indent; mode: visual-line -*-

* What's All this About?

FreedomBuddy is a tool to make it really easy to figure out where your friends are hosting services on the Internet for you.  It allows people to provide one another specific services at specific locations and will use any available protocol to make sure you and your friends stay in touch.

It's designed to be a very resilient communication tool.  It's not difficult to get started with, and once it establishes connections between friends, those connections should be difficult to break down.

In this quick start, we'll be teaching your computer to host the FreedomBuddy service for itself.  This is a good, harmless[fn:1] test, that will try to walk you through the fundamentals of how FreedomBuddy works.

* Make the Project

Now that you've downloaded FreedomBuddy (FBuddy), you need to build and configure the project.  The project will do that automatically when you enter ``make`` from the project's root directory:

: $ make

* Start the Servers

To start the servers, run the start-up script:

: $ bash start.sh

This starts a listening FBuddy server at https://127.0.0.1:8080, an FBuddy monitor at https://127.0.0.1:8081/freedombuddy/, and opens the browser at the monitor.

* Browse the UI

Point your browser to https://127.0.0.1:8081/freedombuddy/, accepting any security warnings that might pop up.  When you're browsing on 127.0.0.1, you're browsing to your local computer, so the warnings are safe to ignore *only in this case*.

* Learn Services

The point of FreedomBuddy is to allow disparate systems to teach one another their identity or location information.  As a proof-of-concept, you can teach your computer about itself, so that it can communicate with itself.

First, you want to teach it that you're hosting (serving, providing) the =freedombuddy= service at =https://127.0.0.1:8080=, so navigate to:

https://127.0.0.1:8081/hosting/

Once there, tell your computer that you want to =Host= a service for a key ID.  Add your long-form PGP key ID (it'll be 40 characters long) as a new client.  When the page refreshes, it should tell you that you're hosting services for that client.  Click the client's name to specify services.  Create the =freedombuddy= service the same way you just created the new client, and click that link as well.

Now, you're into the meat of the system, the locations.  Enter the following location into the large =Location= box at the bottom of your screen:

https://127.0.0.1:8080

Then, create that location.  Verify that the location you just entered is showing on the page when it refreshes.  For the fun of it, add another location that we'll use for testing later.  It doesn't matter what location you specify, as long as it's distinct from the "https" address you entered above.  For example, "foxinsocks" is one of my favorite tests.

Congratulations, you just started hosting FreedomBuddy for yourself.

* Teach Services

Now, you have to teach your client system about where the FreedomBuddy service is located, so it can find the host.  Otherwise, your client system has no idea where to look for the service.

So, navigate to:

https://127.0.0.1:8081/consuming/

Add your key to the list of folks who provide you a service and then add the FreedomBuddy service to the list of services you provide yourself.

Now, add this location to the list of FreedomBuddy locations:

https://127.0.0.1:8080

At this point, the client knows where to go to ask the host for additional data, so, click the "Learn More Locations?" button to query the host for other locations.  Wait a minute and refresh the page.  You should see the test location you entered previously appear in the list.

Congratulations, you've just taught your client a new service location!

Rinse and repeat for any other services you want to add, like a wiki, a blog, or whatever strikes your fancy.

* Wrapping Up

Keep in mind, the =freedombuddy= service is special.  It's how clients find their hosts.  If that service has no locations, then it doesn't know where to go to ask the host for data.  The =freedombuddy= service is the one used for *all* location requests.

* Footnotes

[fn:1] In this context, "harmless" means that this will not send any data outside your computer.  If the test fails, only the folks already inside your computer will know.
